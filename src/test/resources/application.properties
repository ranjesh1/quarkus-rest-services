#spring.datasource.username=root
#spring.datasource.password=MyNewPass
#spring.datasource.url=jdbc:mysql://localhost:3306/rest_order_db
#spring.jpa.hibernate.ddl-auto=update

#spring.jpa.hibernate.use-new-id-generator-mappings=true
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
#Â´
#spring.jpa.show-sql = true

#quarkus.mongodb.connection-string=mongodb://rest_order_db:rest_order_db@localhost:27017/rest_order_db
# --- Note the wrong context of database name ... planning and design before coding is so important.
#quarkus.mongodb.database=rest_order_db
#quarkus.http.port=8082

# configure your datasource
#quarkus.datasource.url = jdbc:h2:tcp://localhost/mem:test
#quarkus.datasource.driver = org.h2.Driver
#quarkus.datasource.jdbc.url = jdbc:h2:tcp://localhost/mem:test
#quarkus.datasource.db-kind=h2
#quarkus.datasource.jdbc.url=jdbc:h2:mem:default
#quarkus.hibernate-orm.database.generation=drop-and-create
#quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect

#quarkus.datasource.username=username-default


#quarkus.datasource.jdbc=false
#quarkus.datasource.jdbc.driver=jdbc:h2:mem:default
#quarkus.datasource.jdbc.max-size=13
#quarkus.datasource.jdbc=false
#quarkus.datasource.jdbc.max-size=13

#quarkus.datasource.driver = org.h2.Driver

#quarkus.datasource.jdbc.url = jdbc:mysql://localhost:3306/rest_order_db

#quarkus.datasource.driver = org.mysql.Driver
#quarkus.datasource.username=root
#quarkus.datasource.password=Welcome2root
#quarkus.datasource.jdbc.max-size=8
# drop and create the database at startup (use `update` to only update the schema)
#quarkus.hibernate-orm.database.generation = update
#quarkus.hibernate-orm.database.generation = drop-and-create
#quarkus.hibernate-orm.database.generation = update
#quarkus.hibernate-orm.log.sql=true