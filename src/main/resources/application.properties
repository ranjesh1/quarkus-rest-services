#spring.datasource.username=root
#spring.datasource.password=MyNewPass
#spring.datasource.url=jdbc:mysql://localhost:3306/rest_order_db
#spring.jpa.hibernate.ddl-auto=update

#spring.jpa.hibernate.use-new-id-generator-mappings=true
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
#Â´
#spring.jpa.show-sql = true

#quarkus.mongodb.connection-string=mongodb://rest_order_db:rest_order_db@localhost:27017/rest_order_db
# --- Note the wrong context of database name ... planning and design before coding is so important.
#quarkus.mongodb.database=rest_order_db
#quarkus.http.port=8082

# configure your datasource
#quarkus.datasource.url = jdbc:postgresql://localhost:5432/rest_order_db

quarkus.datasource.db-kind=mysql
#quarkus.datasource.db-kind=h2
quarkus.datasource.username=root
quarkus.datasource.password=Welcome2root
quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/rest_order_db
#quarkus.hibernate-orm.database.generation = drop-and-create



#quarkus.hibernate-orm.database.generation = update
#quarkus.datasource.driver = org.postgresql.Driver
#quarkus.datasource.driver = org.mysql.Driver

quarkus.datasource.jdbc.max-size=8
# drop and create the database at startup (use `update` to only update the schema)
#quarkus.hibernate-orm.database.generation = update
#quarkus.hibernate-orm.database.generation = drop-and-create
#quarkus.hibernate-orm.database.generation = update
quarkus.hibernate-orm.log.sql=true